// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.6 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name DIDCommunicationSDK
@_exported import DIDCommunicationSDK
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol CommnunicationProtocol {
  #if compiler(>=5.3) && $AsyncAwait
  func doGet(url: Foundation.URL) async throws -> Foundation.Data
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  func doPost(url: Foundation.URL, requestJsonData: Foundation.Data) async throws -> Foundation.Data
  #endif
}
public struct CommunicationSDKError : Swift.Error {
  public var code: Swift.String
  public var message: Swift.String
}
public class CommnunicationClient : DIDCommunicationSDK.CommnunicationProtocol {
  public init()
  #if compiler(>=5.3) && $AsyncAwait
  public func doGet(url: Foundation.URL) async throws -> Foundation.Data
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func doPost(url: Foundation.URL, requestJsonData: Foundation.Data) async throws -> Foundation.Data
  #endif
  @objc deinit
}
public enum CommunicationLogLevel : Swift.String {
  case verbose
  case debug
  case info
  case warning
  case error
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers public class CommunicationLogger {
  public static let shared: DIDCommunicationSDK.CommunicationLogger
  public func setEnable(_ onOff: Swift.Bool)
  public func setLogLevel(_ level: DIDCommunicationSDK.CommunicationLogLevel)
  public func debug(_ message: Swift.String, function: Swift.String = #function)
  public func info(_ message: Swift.String, function: Swift.String = #function)
  public func warning(_ message: Swift.String, function: Swift.String = #function)
  public func verbose(_ message: Swift.String, function: Swift.String = #function)
  public func error(_ message: Swift.String, function: Swift.String = #function)
  @objc deinit
}
extension DIDCommunicationSDK.CommunicationLogLevel : Swift.Equatable {}
extension DIDCommunicationSDK.CommunicationLogLevel : Swift.Hashable {}
extension DIDCommunicationSDK.CommunicationLogLevel : Swift.RawRepresentable {}
